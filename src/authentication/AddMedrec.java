/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package authentication;

import javax.swing.JOptionPane;
//personal added imports here
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
/**
 *
 * @author franz
 */
public class AddMedrec extends javax.swing.JFrame {

     //Connection Db - DATABASE CONNECTION
    Connection con = connectionDB.getConnectionDB();
    //for patient names from patreg-- array things configurations
    public static String addID = "";
    String[] array = new String[50];
    //for doc
    public static String addIDdoc = "";
    String[] arrayDoc = new String[50];
 
    
    
    
    
    /**
     * Creates new form AddMedrec
     */
    public AddMedrec() {
        initComponents();
        patientNameList();
        doctorList();
    }
    
    
    void patientNameList() {
        medrecPname.removeAllItems();
        medrecPname.addItem("--------");
        
        
        int i = 0;

        try {
            String queryAdd = "SELECT*FROM patient_registration";
            Statement st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(queryAdd);
            while (rs.next()) {

                String f = rs.getString("Patient_fname");
                String l = rs.getString("Patient_lname");
                

                String fl = f + " " + l;
                medrecPname.addItem(fl);

                array[i] = rs.getString("Patient_id");
                i++;

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    
    
       void doctorList() {
        medrecDoc.removeAllItems();
        medrecDoc.addItem("--------");
        
        
        int i = 0;

        try {
            String queryAdd = "SELECT*FROM doctor";
            Statement st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(queryAdd);
            while (rs.next()) {

                String f = rs.getString("Doctor_Fname");
                String l = rs.getString("Doctor_Lname");
                
                //doctor == dfl
                String dfl = f + " " + l;
                medrecDoc.addItem(dfl);

                arrayDoc[i] = rs.getString("Doctor_code");
                i++;

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        medrecPname = new javax.swing.JComboBox<>();
        medrecBP = new javax.swing.JTextField();
        medrecDiagnosis = new javax.swing.JTextField();
        medrecMedication = new javax.swing.JTextField();
        SubmitButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        medrecDoc = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Patient Name");

        jLabel3.setText("Blood Pressure");

        jLabel4.setText("Diagnosis");

        jLabel5.setText("Medication");

        medrecPname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medrecPnameActionPerformed(evt);
            }
        });

        medrecBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medrecBPActionPerformed(evt);
            }
        });

        medrecDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medrecDiagnosisActionPerformed(evt);
            }
        });

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Doctor");

        medrecDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medrecDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(SubmitButton)
                        .addGap(92, 92, 92)
                        .addComponent(CancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(medrecDiagnosis)
                                .addComponent(jLabel5)
                                .addComponent(medrecMedication, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                                .addComponent(medrecPname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(medrecBP, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(medrecDoc, 0, 180, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medrecPname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medrecDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medrecBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(medrecDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(medrecMedication, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitButton)
                    .addComponent(CancelButton))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void medrecBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medrecBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medrecBPActionPerformed

    private void medrecDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medrecDiagnosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medrecDiagnosisActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        String Pname = (String) medrecPname.getSelectedItem();
        //doctor, account, date here:
        String doc = (String) medrecDoc.getSelectedItem();
        String bp = medrecBP.getText();
        String diagnosis = medrecDiagnosis.getText();
        String medication = medrecMedication.getText();
        
         if (Pname.isEmpty() || doc.isEmpty() || bp.isEmpty() || diagnosis.isEmpty() || medication.isEmpty()) 
         {
            JOptionPane.showMessageDialog(null, "Please Fill-up the empty space!");
         }
         
         
         else
        {               
            String insertinfo = "INSERT INTO medical_records (F_Patient_id, F_Doctor_code, F_Account_id, BP, "
                    + "Diagnosis, Medication)VALUES(?,?,?,?,?,?)";
            try {
//                String doctor = (String) medrecDoc.getSelectedItem();
//                String searchId = "Select Doctor_code FROM doctor WHERE "
                
                
                
                
                PreparedStatement pst = (PreparedStatement) con.prepareStatement(insertinfo);
                
                //Patient Name registration
                pst.setString(1, addID);
                pst.setString(2, addIDdoc);
                //records the account id / doctor sa nag register. 
                pst.setString(3, Login.Accountid);
                pst.setString(4, bp);
                pst.setString(5, diagnosis);
                pst.setString(6, medication);                
                pst.setString(PROPERTIES, Pname);
                //for submit
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Medical Record Added!");
                
            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void medrecPnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medrecPnameActionPerformed
        // TODO add your handling code here:
        //Patient Names code here calling options in database
        if (!(medrecPname.getSelectedItem().toString().equals("--------"))) {
            int pi = medrecPname.getSelectedIndex();
            addID = array[pi - 1];
        }
          
    }//GEN-LAST:event_medrecPnameActionPerformed

    private void medrecDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medrecDocActionPerformed
        // TODO add your handling code here:
        if (!(medrecDoc.getSelectedItem().toString().equals("--------"))) {
            int di = medrecDoc.getSelectedIndex();
            addIDdoc = arrayDoc[di - 1];
        }
    }//GEN-LAST:event_medrecDocActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMedrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMedrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMedrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMedrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMedrec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField medrecBP;
    private javax.swing.JTextField medrecDiagnosis;
    private javax.swing.JComboBox<String> medrecDoc;
    private javax.swing.JTextField medrecMedication;
    private javax.swing.JComboBox<String> medrecPname;
    // End of variables declaration//GEN-END:variables
}
